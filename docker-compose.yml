services:
  api_db:
    image: postgres:13
    volumes:
      - api_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: apidatabase
      POSTGRES_USER: apiuser
      POSTGRES_PASSWORD: apipassword
      PGPORT: 5433
    networks:
      - api-api_db

  web_db:
    image: postgres:13
    volumes:
      - web_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - web-web_db

  api:
    build: ./api
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./api/:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - api_db
    networks:
      - frontend-api
      - api-api_db

  web:
    build: ./web
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./web/:/usr/src/app
    ports:
      - "8080:8080"
    depends_on:
      - web_db
    networks:
      - frontend-web
      - web-web_db
  
  frontend:
    build: ./frontend
    
    volumes:
      - ./frontend/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  
    depends_on:
      - api
      - web

    networks:
      - frontend-api

networks:
  frontend-api:
  api-api_db:
  frontend-web:
  web-web_db:

volumes:
  api_postgres_data:
  web_postgres_data:
  media:
  static:
