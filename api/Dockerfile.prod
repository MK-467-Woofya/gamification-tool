# Builder section - Building the Python wheels 
# Python image
FROM python:3.11.4-slim AS builder

# Working directory
WORKDIR /usr/src/app

# Set Django environment
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# Python linter for code practices
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 ./gamification_tool ./user ./leaderboard ./marketplace

# Install Python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


# Final section - Building the application containers
# Python image
FROM python:3.11.4-slim

# Application user directory
RUN mkdir -p /home/app

# Add user
RUN addgroup --system app && adduser --system --group app

# Make directories for volumes, etc.
ENV HOME=/home/app
ENV APP_HOME=/home/app/api
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat-traditional
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy entrypoint script
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# Copy whole project
COPY . $APP_HOME

# Give ownership of all the files to the app user
RUN chown -R app:app $APP_HOME

# Assume role us app User
USER app

# Run entrypoint script
ENTRYPOINT ["/home/app/api/entrypoint.prod.sh"]